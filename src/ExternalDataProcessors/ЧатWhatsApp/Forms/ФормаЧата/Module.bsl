
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Адрес = ДвоичныеДанныеОбработкиВХранилище();
	ЗапуститьФоновоеЗаданиеПолученияСообщений(Адрес);	

	ПодключитьОбработчикОжидания("ПолучитьСообщения", 5);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
		
	Если ЗавершениеРаботы Тогда
		Отказ = Истина;
		ТекстПредупреждения = "Выполняется фоновое задание получения сообщений, рекомендуется закрывать форму обработки вручную";
		Возврат;
	КонецЕсли;
	
	ОтключитьПолучениеСообщение();
	ОтключитьОбработчикОжидания("ПолучитьСообщения");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЧаты

&НаКлиенте
Процедура ЧатыПриИзменении(Элемент)
	
	НомерТелефона = Элементы.Чаты.ТекущиеДанные.id;
	Элементы.Чаты.ТекущиеДанные.id = ВалидироватьНомерТелефона(НомерТелефона);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧатыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Чаты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда		Возврат;
	КонецЕсли;
	
	IDЧата = ТекущиеДанные.id;
	ОтборЧатаПоIDЧата(IDЧата);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьСобщение(Команда)
	
	ТекстСообщения = СокрЛП(Сообщение.ПолучитьТекст());
	
	Если ПустаяСтрока(ТекстСообщения) Тогда
		ВызватьИсключение "Не заполнен текст сообщения";
	КонецЕсли;
		
	ТекущиеДанныеЧаты = Элементы.Чаты.ТекущиеДанные;
	
	Если ТекущиеДанныеЧаты = Неопределено Тогда
		ВызватьИсключение "Не выбран чат";
	КонецЕсли;
	
	НомерТелефона = ТекущиеДанныеЧаты.id;
		
	Результат = ОтправитьСобщениеНаСервере(НомерТелефона, ТекстСообщения);
	
	Если Результат.Статус = "Успех" Тогда	
		
		НашеСообщение = ЧатТаблица.Добавить();
		НашеСообщение.ТекстСообщения = ТекстСообщения;
		НашеСообщение.ЭтоНашеСообщение = Истина;
		НашеСообщение.НомерТелефона = Объект.idInstance;
		НашеСообщение.idChat = НомерТелефона;
		
		Сообщение.УстановитьТекст("");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОтправитьСобщениеНаСервере(НомерТелефона, ТекстСообщения)
			
	Обработка = РеквизитФормыВЗначение("Объект");
	Результат = Обработка.ОтправитьСообщение(НомерТелефона, ТекстСообщения);	
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция НовыеСообщения()

	ИдентфикаторХранилищаСообщение = ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор;

	Обработка = РеквизитФормыВЗначение("Объект");
	МассивСообщений = Обработка.СообщенияИзХранилищаОбщихНастроек(ИдентфикаторХранилищаСообщение);
	
	Если ТипЗнч(МассивСообщений) <> Тип("Соответствие") Тогда
		Возврат Новый Соответствие;
	КонецЕсли;
	
	Возврат МассивСообщений;

КонецФункции

&НаСервере
Процедура ЗапуститьФоновоеЗаданиеПолученияСообщений(Адрес)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	ПутьКФайлу = ПолучитьИмяВременногоФайла("epf");
	ДвоичныеДанные.Записать(ПутьКФайлу);
	
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("apiTokenInstance", Объект.apiTokenInstance);
	ПараметрыЗадания.Вставить("idInstance", Объект.idInstance);
	ПараметрыЗадания.Вставить("apiUrl", Объект.apiUrl);
		
	ПараметрыВыполненияПроцедуры = ДлительныеОперации.ПараметрыВыполненияПроцедуры();
    
    ПараметрыВыполнения = Новый Структура;
    ПараметрыВыполнения.Вставить("ИмяОбработки", ПутьКФайлу);
    ПараметрыВыполнения.Вставить("ИмяМетода", "ПолучитьСообщения");
    ПараметрыВыполнения.Вставить("ЭтоВнешняяОбработка", Истина);   
    ПараметрыВыполнения.Вставить("ПараметрыВыполнения", ПараметрыЗадания);
    
    ИдентфикаторХранилищаСообщение = ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор;

	РеквизитФормыВЗначение("Объект").УстановитьСтатусПолученияСообщений(
		ИдентфикаторХранилищаСообщение, Истина
	);

    ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполненияПроцедуры, "ДлительныеОперации.ВыполнитьПроцедуруМодуляОбъектаОбработки", ПараметрыВыполнения, ИдентфикаторХранилищаСообщение);
	
	УдалитьФайлы(ПутьКФайлу);
	
КонецПроцедуры

&НаКлиенте
Функция ДвоичныеДанныеОбработкиВХранилище()
	
	Путь = ПутьКФайлуНаКлиенте();
	Возврат ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Путь), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция ПутьКФайлуНаКлиенте()
	Возврат РеквизитФормыВЗначение("Объект").ИспользуемоеИмяФайла;
КонецФункции

&НаСервере
Процедура ОтключитьПолучениеСообщение()
	
	РеквизитФормыВЗначение("Объект").УстановитьСтатусПолученияСообщений(
		ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор, Ложь
	);
	
	ФоновоеЗадания = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(УникальныйИдентификатор);
	
	Если ФоновоеЗадания <> Неопределено И ФоновоеЗадания.Состояние = СостояниеФоновогоЗадания.Активно Тогда
		ФоновоеЗадания.Отменить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ВалидироватьНомерТелефона(Знач НомерТелефона)
	
	Строка = СокрЛП(НомерТелефона);
	Строка = СтрЗаменить(Строка, " ", "");
	Строка = СтрЗаменить(Строка, "-", "");
	Строка = СтрЗаменить(Строка, "+", "");
	Строка = СтрЗаменить(Строка, "(", "");
	Строка = СтрЗаменить(Строка, ")", "");
	
	Если СтрДлина(Строка) <> 11 Тогда
		Возврат "";
	КонецЕсли;

	Для Счетчик = 1 По СтрДлина(Строка) Цикл
		Если СтрНайти("0123456789", Сред(Строка, Счетчик, 1)) = 0 Тогда
			Возврат "";
		КонецЕсли;
	КонецЦикла;

	Возврат Строка;

КонецФункции

&НаКлиенте
Процедура ОтборЧатаПоIDЧата(IDЧата)
	
	Если ЗначениеЗаполнено(IDЧата) Тогда
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("idChat", IDЧата);
		ОтборСтрок = Новый ФиксированнаяСтруктура(СтруктураПоиска);
	Иначе
		ОтборСтрок = Неопределено;
	КонецЕсли;
	
	Элементы.ЧатТаблица.ОтборСтрок = ОтборСтрок; 
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСообщенияИзЛокальнойОчереди(СписокСообщений)
	
	Если СписокСообщений.Количество() > 0 Тогда
		Обработка = РеквизитФормыВЗначение("Объект");
		Обработка.УдалитьСообщенияИзЛокальнойОчереди(СписокСообщений, ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСообщения()

	Результат = НовыеСообщения();
	
	СписокНаОчисткуИзЛокальнойОчереди = Новый Массив;	
	Для Каждого КлючЗначение Из Результат Цикл
		
		СтрокаСообщения = КлючЗначение.Значение;
		
		НомерТелефона = СтрЗаменить(СтрокаСообщения.body.senderData.chatId, "@c.us", "");
		ТекстСообщения = СтрокаСообщения.body.messageData.TextMessageData.textMessage;
		
		СтрокаЧат = Объект.СписокЧатов.НайтиСтроки(Новый Структура("id", НомерТелефона));
		
		Если СтрокаЧат.Количество() = 0 Тогда
			СтрокаЧат = Объект.СписокЧатов.Добавить();
			СтрокаЧат.id = НомерТелефона;
		КонецЕсли;
		
		НашеСообщение = ЧатТаблица.Добавить();
		НашеСообщение.ТекстСообщения = ТекстСообщения;
		НашеСообщение.НомерТелефона = НомерТелефона;
		НашеСообщение.idChat = НомерТелефона;
		
		СписокНаОчисткуИзЛокальнойОчереди.Добавить(КлючЗначение.Ключ);
		
	КонецЦикла;	

	УдалитьСообщенияИзЛокальнойОчереди(СписокНаОчисткуИзЛокальнойОчереди);

КонецПроцедуры

#КонецОбласти

