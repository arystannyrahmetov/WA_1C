#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Отправляет сообщение в WhatsApp на указанный номер телефона.
//
// Параметры:
//   НомерТелефона - Строка - номер телефона получателя
//   ТекстСообщения - Строка - текст отправляемого сообщения
//
// Возвращаемое значение:
//   Структура:  
//    * Статус - Строка
//    * Ответ - Структура,Неопределено, Массив, Число, Строка, Булево - содержит статус операции и ответ от сервера
//@skip-check doc-comment-collection-item-type
Функция ОтправитьСообщение(НомерТелефона, ТекстСообщения) Экспорт

	URL = apiUrl + "/waInstance" + idInstance + "/sendMessage/" + apiTokenInstance;
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-Type", "application/json");
	
	ПараметрыЗапроса = Новый Структура();
	ПараметрыЗапроса.Вставить("chatId", НомерТелефона + "@c.us");
	ПараметрыЗапроса.Вставить("message", ТекстСообщения);
	
	Ответ = ВыполнитьЗапрос(URL, ПараметрыЗапроса, Заголовки, "POST");
	
	Возврат Новый Структура("Статус, Ответ", "Успех", ПрочитатьЗначениеJSON(Ответ.ПолучитьТелоКакСтроку()));
	
КонецФункции

// Получает сообщения из WhatsApp и сохраняет их в хранилище общих настроек.
//
// Параметры:
//   Параметры - Структура - Параметры для подключения к WhatsApp API
//   ИдентфикаторХранилищаСообщение - УникальныйИдентификатор - Идентификатор хранилища для сохранения сообщений
Процедура ПолучитьСообщения(Параметры, ИдентфикаторХранилищаСообщение) Экспорт
		
	URL = Параметры.apiUrl + "/waInstance" + Параметры.idInstance + "/receiveNotification/" + Параметры.apiTokenInstance;
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-Type", "application/json");
	
	Пока Истина Цикл
		
		Если НужноОстановитьПолучениеСообщений(ИдентфикаторХранилищаСообщение) Тогда
			Прервать;
		КонецЕсли;
			
		Ответ = ВыполнитьЗапрос(URL, Неопределено, Заголовки, "GET");
		
		ОтветСтруктура = ПрочитатьЗначениеJSON(Ответ.ПолучитьТелоКакСтроку());
		
		Если ОтветСтруктура = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		УдалитьСообщениеИзОчереди(Параметры, ОтветСтруктура.receiptId);
		
		Если ОтветСтруктура.body.typeWebhook = "incomingMessageReceived" Тогда
			ПоместитьСообщениеВХранилищеОбщихНастроек(ОтветСтруктура, ИдентфикаторХранилищаСообщение);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

// Удаляет сообщение из очереди WhatsApp.
//
// Параметры:
//   Параметры - Структура - Содержит параметры для подключения к API WhatsApp
//   receiptId - Строка - Идентификатор сообщения для удаления
//
// Возвращаемое значение:
//   HTTPОтвет - Результат выполнения запроса на удаление сообщения
//@skip-check bsl-variable-name-invalid
Функция УдалитьСообщениеИзОчереди(Параметры, receiptId) Экспорт

	URL = Параметры.apiUrl + "/waInstance" + Параметры.idInstance + "/deleteNotification/" + Параметры.apiTokenInstance + "/" + receiptId;
	
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("Content-Type", "application/json");
	
	ПараметрыЗапроса = Новый Структура();
	ПараметрыЗапроса.Вставить("receiptId", receiptId);
	
	Возврат ВыполнитьЗапрос(URL, ПараметрыЗапроса, Заголовки, "DELETE");

КонецФункции

// Загружает сохраненные сообщения из хранилища общих настроек.
//
// Параметры:
//   ИдентфикаторХранилищаСообщение - Строка - Идентификатор хранилища для загрузки сообщений.
//
// Возвращаемое значение:
//   Соответствие - Сообщения, загруженные из хранилища общих настроек.
//@skip-check doc-comment-collection-item-type
Функция СообщенияИзХранилищаОбщихНастроек(ИдентфикаторХранилищаСообщение) Экспорт
	
	Сообщения = ХранилищеОбщихНастроек.Загрузить("ЧатWhatsApp" + ИдентфикаторХранилищаСообщение, "Сообщения", , "ЧатWhatsApp");
	
	Если ТипЗнч(Сообщения) <> Тип("Соответствие") Тогда
		Сообщения = Новый Соответствие;
	КонецЕсли;
	
	Возврат Сообщения;
	
КонецФункции

// Удаляет указанные сообщения из локальной очереди.
//
// Параметры:
//   СписокСообщений - Массив из Строка - идентификаторы сообщений для удаления
//   ИдентфикаторХранилищаСообщение - Строка - идентификатор хранилища сообщений
Процедура УдалитьСообщенияИзЛокальнойОчереди(СписокСообщений, ИдентфикаторХранилищаСообщение) Экспорт
	
	СообщенияВОчереди = ХранилищеОбщихНастроек.Загрузить("ЧатWhatsApp" + ИдентфикаторХранилищаСообщение, "Сообщения", , "ЧатWhatsApp");
	
	Если ТипЗнч(СообщенияВОчереди) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ИдентификаторСообщения Из СписокСообщений Цикл
		Если СообщенияВОчереди.Получить(ИдентификаторСообщения) <> Неопределено Тогда
			СообщенияВОчереди.Удалить(ИдентификаторСообщения);
		КонецЕсли;
	КонецЦикла;
	
	ХранилищеОбщихНастроек.Сохранить("ЧатWhatsApp" + ИдентфикаторХранилищаСообщение, "Сообщения", СообщенияВОчереди, , "ЧатWhatsApp");
	
КонецПроцедуры

// Установка статуса получения сообщений
//
// Параметры:
//   ИдентфикаторХранилищаСообщение - Строка - Идентификатор хранилища сообщений
//   Значение - Булево - Истина - полученать сообщения, Ложь - остановить получения
Процедура УстановитьСтатусПолученияСообщений(ИдентфикаторХранилищаСообщение, Значение) Экспорт
	
	ХранилищеОбщихНастроек.Сохранить("ЧатWhatsApp" + ИдентфикаторХранилищаСообщение, "ПолучатьСообщения", Значение, , "ЧатWhatsApp");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НужноОстановитьПолучениеСообщений(ИдентфикаторХранилищаСообщение)
	
	Значение = ХранилищеОбщихНастроек.Загрузить("ЧатWhatsApp" + ИдентфикаторХранилищаСообщение, "ПолучатьСообщения", , "ЧатWhatsApp");

	Если ТипЗнч(Значение) <> Тип("Булево") Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат НЕ Значение;

КонецФункции

Функция ВыполнитьЗапрос(URL, ПараметрыЗапроса, Заголовки, Метод = "POST")
	
	Попытка
		
		СтруктураURI = СтруктураURI(URL);
		
		Запрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере, Заголовки);
		
		Если Метод = "POST" Тогда
			Запрос.УстановитьТелоИзСтроки(ЗаписатьЗначениеJSON(ПараметрыЗапроса));
		КонецЕсли;
				
		HTTPСоединение = Новый HTTPСоединение(СтруктураURI.Хост, СтруктураURI.Порт, ,,, 60, Новый ЗащищенноеСоединениеOpenSSL());
		//@skip-check bsl-legacy-check-dynamic-feature-access
		Ответ = HTTPСоединение.ВызватьHTTPМетод(Метод, Запрос);
		
		Если Ответ.КодСостояния <> 200 Тогда
			ВызватьИсключение Ответ.ПолучитьТелоКакСтроку();
		КонецЕсли;
		
		Возврат Ответ;
		
	Исключение
		
		ВызватьИсключение ОписаниеОшибки();
		
	КонецПопытки;
	
КонецФункции

Функция СтруктураURI(Знач СтрокаURI)
	
	СтрокаURI = СокрЛП(СтрокаURI);
	
	Схема = "";
	Позиция = СтрНайти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;

	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = СтрНайти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
		
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = СтрНайти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = СтрНайти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	
	Хост = ИмяСервера;
	Порт = "";
	Позиция = СтрНайти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(Порт <> "", Число(Порт), Неопределено));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции

Процедура ПоместитьСообщениеВХранилищеОбщихНастроек(Сообщение, ИдентфикаторХранилищаСообщение)
	
	Сообщения = ХранилищеОбщихНастроек.Загрузить("ЧатWhatsApp" + ИдентфикаторХранилищаСообщение, "Сообщения", , "ЧатWhatsApp");
	
	Если ТипЗнч(Сообщения) <> Тип("Соответствие") Тогда
		Сообщения = Новый Соответствие;
	КонецЕсли;
	
	Сообщения.Вставить(Сообщение.body.idMessage, Сообщение);
	
	ХранилищеОбщихНастроек.Сохранить("ЧатWhatsApp" + ИдентфикаторХранилищаСообщение, "Сообщения", Сообщения, , "ЧатWhatsApp");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли